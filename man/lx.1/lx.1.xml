<?xml version="1.0"?>

<!--
	Copyright 2008-2017 Katherine Flavel

	See LICENCE for the full copyright terms.
-->

<!DOCTYPE refentry SYSTEM "minidocbook.dtd" [

	<!-- TODO: centralise to mdb -->
	<!ENTITY stdin.lit  "<literal>stdin</literal>">
	<!ENTITY stdout.lit "<literal>stdout</literal>">
	<!ENTITY stderr.lit "<literal>stderr</literal>">

	<!-- TODO: centralise to mdb -->
	<!ENTITY prefix.arg "<replaceable>prefix</replaceable>">

	<!ENTITY api_tokbuf.arg "<replaceable>tokbuf</replaceable>">
	<!ENTITY api_getc.arg   "<replaceable>getc</replaceable>">

	<!ENTITY n.opt "<option>-n</option>">
	<!ENTITY Q.opt "<option>-Q</option>">
	<!ENTITY X.opt "<option>-X</option>">
	<!ENTITY b.opt "<option>-b</option>&nbsp;&api_tokbuf.arg;">
	<!ENTITY g.opt "<option>-g</option>&nbsp;&api_getc.arg;">
	<!ENTITY l.opt "<option>-l</option>&nbsp;&lang.arg;">
	<!ENTITY e.opt "<option>-e</option>&nbsp;&prefix.arg;">
	<!ENTITY t.opt "<option>-t</option>&nbsp;&prefix.arg;">

	<!ENTITY h.opt "<option>-h</option>">
	<!ENTITY v.opt "<option>-v</option>">

<!-- XXX: literal or code? be consistent wrt other manpages -->
	<!ENTITY c.lit    "<literal>c</literal>">
	<!ENTITY dot.lit  "<literal>dot</literal>">
	<!ENTITY dump.lit "<literal>dump</literal>">

]>

<refentry>
	<refentryinfo>
		<productname>lx</productname>
	</refentryinfo>

	<refmeta>
		<refentrytitle>lx</refentrytitle>
		<manvolnum>1</manvolnum>
	</refmeta>

	<refnamediv>
		<refname>lx</refname>
		<refpurpose>Lexer generator</refpurpose>
	</refnamediv>

	<refsynopsisdiv>
		<cmdsynopsis>
			<command>lx</command>

			<arg choice="opt">&n.opt;</arg>
			<arg choice="opt">&Q.opt;</arg>
			<arg choice="opt">&X.opt;</arg>
			<arg choice="opt">&b.opt;</arg>
			<arg choice="opt">&g.opt;</arg>
			<arg choice="opt">&l.opt;</arg>
			<arg choice="opt">&e.opt;</arg>
			<arg choice="opt">&t.opt;</arg>
		</cmdsynopsis>

		<cmdsynopsis>
			<command>lx</command>

			<group choice="req">
				<arg choice="plain">&h.opt;</arg>
<!-- TODO:
				<arg choice="plain">&v.opt;</arg>
-->
			</group>
		</cmdsynopsis>
	</refsynopsisdiv>

	<refsection>
		<title>Description</title>

		<para>&lx.1; reads a specification for a lexical analyser,
			and outputs a program which implements that analyser.
			The specification language is documented by &lx.5;</para>

		<para>Lexing is the process of categorising a stream of items
			by their spellings. The output from this process is
			a stream of tokens, each of a specific lexeme category,
			which are most commonly input to a parser responsible
			for asserting the order of these tokens is valid.</para>

TODO: see also lex, lexi

&lx.5; syntax
read from &stdin.lit;
output to &stdout.lit;
Dot output is not subject to checks for semantic errors
	</refsection>

	<refsection>
		<title>Options</title>

		<variablelist>
			<varlistentry>
				<term>&l.opt;</term>

				<listitem>
					<para>TODO: language</para>

					<table>
						<col align="left"/>
						<col align="left"/>

						<thead>
							<tr>
								<th>Language</th>
								<th>Name</th>
							</tr>
						</thead>

						<tbody>
							<tr>
								<td><literal>test</literal></td>
								<td>Test</td> <!-- TODO: ... -->
							</tr>
							<tr>
								<td><literal>dot</literal></td>
								<td>Graphviz Dot format</td>
							</tr>
							<tr>
								<td><literal>dump</literal></td>
								<td>Token dump program</td>
							</tr>
							<tr>
								<td><literal>c</literal> (default)</td>
								<td>&iso; C90 Lexer source</td>
							</tr>
							<tr>
								<td><literal>h</literal></td>
								<td>&iso; C90 Header</td>
							</tr>
						</tbody>
					</table>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>&b.opt;</term>

				<listitem>
					<para>TODO: tokbuf scheme</para>
					<para>TODO: applicable only for .c/.h</para>
					<para>TODO: may be specified multiple times for a cumulative effect</para>
					<para>TODO: the default is none</para>

					<table>
						<col align="left"/>
						<col align="left"/>

						<thead>
							<tr>
								<th>Scheme</th>
								<th>Name</th>
							</tr>
						</thead>

						<tbody>
							<tr>
								<td><literal>dyn</literal></td>
								<td>Dynamic sizing (TODO: per realloc)</td> <!-- TODO: ... -->
							</tr>
							<tr>
								<td><literal>fixed</literal></td>
								<td>Fixed size</td>
							</tr>
						</tbody>
					</table>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>&g.opt;</term>

				<listitem>
					<para>TODO: getc scheme</para>
					<para>TODO: applicable only for .c/.h</para>
					<para>TODO: may be specified multiple times for a cumulative effect</para>
					<para>TODO: the default is none</para>

					<table>
						<col align="left"/>
						<col align="left"/>

						<thead>
							<tr>
								<th>Scheme</th>
								<th>Name</th>
							</tr>
						</thead>

						<tbody>
							<tr>
								<td><literal>fgetc</literal></td>
								<td>TODO: FILE * stdio</td> <!-- TODO: ... -->
							</tr>
							<tr>
								<td><literal>sgetc</literal></td>
								<td>TODO</td>
							</tr>
							<tr>
								<td><literal>agetc</literal></td>
								<td>TODO</td>
							</tr>
							<tr>
								<td><literal>fdgetc</literal></td>
								<td>TODO</td>
							</tr>
						</tbody>
					</table>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>&e.opt;</term>

				<listitem>
					<para>Set a prefix for &api; output.
						The default is to output with no prefix.</para>
<!-- TODO: only relevant for languages which use it -->
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>&t.opt;</term>

				<listitem>
					<para>Set a prefix for token identifiers.
						The default is to use the &api; prefix.</para>
<!-- TODO: only relevant for languages which use it -->
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>&n.opt;</term>

				<listitem>
					<para>&lx.1; constructs Finite State Machines
						by joining &nfa; fragments,
						and minimising to their canonical &dfa; by default.
						The &n.opt; option preserves the constructed &nfa;
						rather than converting to &dfa;.</para>

					<para>The &n.opt; option is permitted for
						<literal>dot</literal> output only.</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>&Q.opt;</term>

				<listitem>
					<para>Print progress to &stderr.lit;.</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>&X.opt;</term>

				<listitem>
					<para>Always encode byte values in hexadecimal,
						per the <code>always_hex</code> option for &fsm_print.3;.
						The default is to only use hex for non-printable characters.</para>
				</listitem>
			</varlistentry>

<!-- TODO:
			<varlistentry>
				<term>&v.opt;</term>

				<listitem>
					<para>Causes &lx.1; to print its version number.</para>
				</listitem>
			</varlistentry>
-->

			<varlistentry>
				<term>&h.opt;</term>

				<listitem>
					<para>Print command-line usage help.</para>
				</listitem>
			</varlistentry>
		</variablelist>
	</refsection>

	<refsection>
		<title>See Also</title>

		<para>&lex.1;, &lexi.1;, &fsm.3;, &re.3;,
			&native.5re;, &literal.5re;, &lx.5;.</para>
	</refsection>
</refentry>

